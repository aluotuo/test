# Hexo Configuration
## Docs: https://hexo.io/docs/configuration.html
## Source: https://github.com/hexojs/hexo/

# Site
title: Hexo
subtitle: ''
description: '联图科技的后端开发文档'
keywords:
author: we
language: zh-CN
timezone: ''

# URL
## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'
url: http://example.com
permalink: :year/:month/:day/:title/
permalink_defaults:
pretty_urls:
  trailing_index: true # Set to false to remove trailing 'index.html' from permalinks
  trailing_html: true # Set to false to remove trailing '.html' from permalinks

# Directory
source_dir: source
public_dir: public
tag_dir: tags
archive_dir: archives
category_dir: categories
code_dir: downloads/code
i18n_dir: :lang
skip_render:

# Writing
new_post_name: :title.md # File name of new posts
default_layout: post
titlecase: false # Transform title into titlecase
external_link:
  enable: true # Open external links in new tab
  field: site # Apply to the whole site
  exclude: ''
filename_case: 0
render_drafts: false
# 使用 hexo new 创建文章时，是否自动创建资源目录
post_asset_folder: true
relative_link: false
future: true
highlight:
  enable: true
  line_number: true
  auto_detect: false
  tab_replace: ''
  wrap: true
  hljs: false
prismjs:
  enable: false
  preprocess: true
  line_number: true
  tab_replace: ''

# Home page setting
# path: Root path for your blogs index page. (default = '')
# per_page: Posts displayed per page. (0 = disable pagination)
# order_by: Posts order. (Order by date descending by default)
index_generator:
  path: ''
  per_page: 10
  order_by: -date

# Category & Tag
default_category: uncategorized
category_map:
tag_map:

# Metadata elements
## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta
meta_generator: true

# Date / Time format
## Hexo uses Moment.js to parse and display date
## You can customize the date format as defined in
## http://momentjs.com/docs/#/displaying/format/
date_format: YYYY-MM-DD
time_format: HH:mm:ss
## updated_option supports 'mtime', 'date', 'empty'
updated_option: 'mtime'

# Pagination
## Set per_page to 0 to disable pagination
per_page: 10
pagination_dir: page

# Include / Exclude file(s)
## include:/exclude: options only apply to the 'source/' folder
include:
exclude:
ignore:

# Extensions
## Plugins: https://hexo.io/plugins/
## Themes: https://hexo.io/themes/
theme: next

# Deployment
## Docs: https://hexo.io/docs/one-command-deployment
deploy:
  type: ''

# 额外的渲染配置，需要安装 npm install hexo-renderer-marked --save
marked:
  # gfm-启用GitHub风格的降价
  gfm: true
  # 尽可能符合markdown.pl中模糊的部分。不要修复任何原始的降价错误或不良行为
  pedantic: false
  # 启用GFM换行。此选项要求gfm选项为true
  breaks: true
  # 使用比原始降价更智能的列表行为
  smartLists: true
  # 在引号和短划线之类的地方使用“智能”的标点符号
  smartypants: true
  # -定义在启用smartypants的情况下用于替换常规引号的双引号和单引号
  # 示例: '«»“”'
  #    "double" 将变为 «double»
  #    'single' 将变为 “single”
  # 必须同时指定双引号和单引号替换，否则将被忽略
  quotes: '“”‘’'
  # 将anchorId转换为小写（1）或大写（2）
  modifyAnchors: 0
  # 启用自定义标头id
  # 示例：##[foo]（#bar），id将被设置为“bar”。
  # 要求启用头ID
  anchorAlias: false
  # 启用URL的自动链接。例如。https://hexo.io将变成<a href=“https://hexo.io“>https://hexo.io</a>
  autolink: true
  # 用HTML字符引用转义自动链接的电子邮件地址
  # 这是为了从垃圾邮件机器人使用的基本爬网程序中隐藏电子邮件地址，同时网络浏览器仍然可读
  mangle: true
  # 删除以javascript:、vbscript:和data:开头的URL
  sanitizeUrl: false
  # 使dompurify能够在渲染的Markdown上运行。配置见下文
  dompurify: false
  # headerId-插入标头id，例如<h1 id=“value”>text</h1>。用于将锚链接插入到每个带有标题的段落中。
  headerIds: true
  # 通过 loading=“Lazy” 属性延迟加载图像
  lazyload: false
  # 将根值预设为（内部）映像路径
  # 示例（_config.yml）：
  # 根目录 root 为: /blog/
  # ！[text]（/path/to/image.jpg）变为 <img src=“/blog/path/to_image.jpg”alt=“text”>
  prependRoot: true
  # postAsset-在启用post_asset_folder时，将post资产的图像路径解析为相对路径，并预设根值。
  # “image.jpg”位于“/2020/01/02/foo/image.jpg”，是“/2020/01:02/foo/”的后期资产。
  # ！[]（image.jpg）变为<img src=“/2020/01/02/foo/image.jpg”>
  # 要求启用prependRoot
  postAsset: true
  # 外部链接
  external_link:
    # 在新选项卡中打开外部链接
    enable: true
    # 排除主机名。指定适用的子域，包括www
    # 示例：[foo](https://example.com)成为<a href=“https://example.com“target=”_blank“ rel=”noopener“>foo</a>
    exclude: []
    # 为了安全、隐私和SEO，将rel=“noopener external nofollow noreferrer”添加到所有外部链接。阅读更多。无论external_link.enable如何，都可以启用此功能
    # 示例：[foo](https://example.com)成为<a href=“https://example.com“ rel=”noopener external nofollow noreferrer“>foo外部</a>
    nofollow: false
  # 如果为true，则不会呈现Nunjucks标记｛｛｝｝或｛%%｝（通常由标记插件使用）
  disableNunjucks: false
  # 启用对描述列表语法的支持。
  # 目前描述列表语法既不在CommonMark也不在GFM中，标记的hexo渲染器仅提供向后兼容性选项。
  # 通过禁用descriptionLists，markdown渲染性能将大大提高
  descriptionLists: true
